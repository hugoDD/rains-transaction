server:
  port: 8761
  address: 0.0.0.0

management:
  port : 9091
  # Dubbo Health
  ## StatusChecker Name defaults (default : "memory", "load" )
  health:
    dubbo:
      status:
        defaults:  memory
  ## StatusChecker Name extras (default : empty )
        extras: load,threadpool

spring:
  # REDIS（RedisProperties）
  # （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。
  # spring.redis.cluster.max-redirects=
  # （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
  # spring.redis.cluster.nodes=
  # 连接工厂使用的数据库索引。
  redis:
    database: 2
    # 连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379
    #url=
    # Redis服务器主机。
    host: 172.26.223.109
    # Redis服务器端口
    port: 6379
    # 以毫秒为单位的连接超时。
    timeout:  2000
  # 登录redis服务器的密码。
    #password:
  # 启用SSL支持。
    #ssl: false
  # 池在给定时间可以分配的最大连接数。使用负值无限制。
    pool:
      max-active: 8
  # 池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接。
      max-idle: 8
  # 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。
      max-wait: -1
  # 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。
      min-idle: 0
  # （哨兵模式，不使用则不用开启）Redis服务器的名称。
  # spring.redis.sentinel.master=
  # （哨兵模式，不使用则不用开启）主机：端口对的逗号分隔列表。
  # spring.redis.sentinel.nodes=
  thymeleaf:
    prefix: classpath:/html/
    suffix: .html
    cache:  false
    check-template-location:  true
    content-type: text/html
    enabled:  true
    encoding: UTF-8
  datasource:
    driver-class-name:  com.mysql.jdbc.Driver
    url: jdbc:mysql://172.26.223.28:3306/tx?useUnicode=true&characterEncoding=utf8
    username: mysqladmin
    password: MPadmin
  application:
    name: tx-manager

#mybatis:
#  type-aliases-package: com.rains.transaction.tx.dubbo.sample.consume.entity
#  config-location: classpath:mybatis/mybatis-config.xml
#  mapper-locations: classpath:mybatis/mapper/*.xml


logging:
  level:
    root: error
    org.springframework.boot: info
    org.springframework.web: info
    org.apache.ibatis: info
    com.rains.bonuspoint: info
    com.rains.lottery: debug
    com.rains: debug
    io.netty: info

  path: "./logs"


# txManager redis 配置
#集群配置
tx:
#  redis:
#    cluster:  false
  #tx.redis.cluster.nodes=127.0.0.1:70001;127.0.1:7002
#    redirects:  20
  #单机配置
#    hostName: 172.26.223.109
  #redis主机端口
#    port: 6379
  #tx.redis.password=.rains.01
#socket server Socket对外服务端口
  manager:
    netty:
      port: 9998
      serialize:  kryo
      maxConnection:  100
      maxThreads: 16
      delayTime:  5
      heartTime:  20
  #参与事务的最大等待时间（单位：秒） 所有参与分布式事务逻辑处理的最大等待时间
transactionWaitMaxTime: 500
  #存储到redis下的数据最大保存时间（单位：秒）
redisSaveMaxTime: 3000



# Base packages to scan Dubbo Components (e.g @Service , @Reference)
dubbo:
  scan:
    basePackages: com.rains.transaction.tx.manager.service
  # Dubbo Config properties
  ## ApplicationConfig Bean
  application:
    id: tx-manager
    name: tx-manager
    qos:
      port: 22222
      enable: false
  ## ProtocolConfig Bean
  protocol:
    id: dubbo
    name: dubbo
    port: -1
    status: server
  ## RegistryConfig Bean
  registry:
    id: my-registry
    address: zookeeper://172.26.223.27:2181?client=curator
  # N/A

endpoints:
  health:
    sensitive: false
  dubbo:
    enabled: false

#eureka:
#  instance:
#    hostname: ${hostname:localhost}
#    preferIpAddress: true
#    lease-renewal-interval-in-seconds: 2
#    lease-expiration-duration-in-seconds: 6
#  server:
#    peerEurekaNodesUpdateIntervalMs: 60000
#    enableSelfPreservation: false
#    evictionIntervalTimerInMs: 5000
#  client:
#    serviceUrl:
#      defaultZone: http://172.26.223.21:8080/eureka/
#    healthcheck:
#      enabled: true
#    eurekaServiceUrlPollIntervalSeconds: 60
